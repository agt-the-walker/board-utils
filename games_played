#!/usr/bin/env ruby

require 'erb'
require 'mechanize'
require 'nokogiri'

##### Constants

MAX_TRIES = 7
SLEEP_SECONDS = 1
SLEEP_MULTIPLIER = 2

##### Functions

def fetch_exponential_backoff(agent, url)
  sleep_seconds = SLEEP_SECONDS
  num_tries = 1
  page = agent.get(url)

  while page.code == 202 # https://boardgamegeek.com/wiki/page/BGG_XML_API#toc5
    sleep(sleep_seconds)
    sleep_seconds *= SLEEP_MULTIPLIER
    num_tries += 1
    page = agent.get(url)

    abort "Error: couldn't fetch #{url}" if num_tries > MAX_TRIES
  end

  page.body
end

##### Argument parsing

abort "Usage: #{$0} <BGG username>" if ARGV[0] == '--help' or ARGV.size != 1
USER = ARGV[0]

##### Main program

agent = Mechanize.new

user = ERB::Util.url_encode(USER)
PLAYED_URL = "https://www.boardgamegeek.com/xmlapi/collection/#{user}?played=1"
page = fetch_exponential_backoff(agent, PLAYED_URL)

games = []
Nokogiri::XML(page).css('/items/item').each do |item|
  games << item['objectid']
end

STATS_URL = "https://www.boardgamegeek.com/xmlapi/boardgame/#{games.join(',')}?stats=1"
page = fetch_exponential_backoff(agent, STATS_URL)
puts Nokogiri::XML(page)
